import asyncio
import logging
import sys
import database.requests as rq
import aiogram.utils.markdown as fmt

from os import getenv
from dotenv import load_dotenv
from group_work.user_work import user_router
from loader import bot
from aiogram import Dispatcher, types, F
from aiogram.filters import CommandStart, Command
from database.models import async_main

load_dotenv()
# Bot token can be obtained via https://t.me/BotFather
TOKEN = getenv("BOT_TOKEN")
print(TOKEN)

# All handlers should be attached to the Router (or Dispatcher)
dp = Dispatcher()

@dp.message(CommandStart())
async def echo(message: types.Message):
    user_id = message.from_user.id
    chat_id = int(getenv("CHAT_ID"))
    await rq.set_user(message.from_user.id,
                      message.from_user.username,
                      message.from_user.first_name,
                      message.from_user.last_name)
    await message.answer(
        fmt.text(
            fmt.text("üì£", fmt.hbold("–í–ê–ñ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø")),
            fmt.text(""),
            fmt.text(
                "–†–∞–∑–º–µ—â–∞–π—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã—Ö –∏ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö "
                "–≤–µ—â–∞—Ö –ë–ï–°–ü–õ–ê–¢–ù–û –≤ –Ω–∞—à–µ–π <a href='https://t.me/gdenaiti_metro'>telegram</a> –≥—Ä—É–ø–ø–µ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ <a href='https://vk.com/buro_mm'>VK</a>"),
            fmt.text(""),
            fmt.text(fmt.hbold("–í–ù–ò–ú–ê–ù–ò–ï!")),
            fmt.text("- –û—Å—Ç–µ—Ä–µ–≥–∞–π—Ç–µ—Å—å –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤!"),
            fmt.text("- –¢—Ä–µ–±—É–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤!"),
            fmt.text("- –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –∑–∞—Ä–∞–Ω–µ–µ!"),
            fmt.text("- –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –¢–û–õ–¨–ö–û –ø—Ä–∏ –ª–∏—á–Ω–æ–π –≤—Å—Ç—Ä–µ—á–µ!"),
            fmt.text("- –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –¢–û–õ–¨–ö–û –ø—Ä–∏ –ª–∏—á–Ω–æ–π –≤—Å—Ç—Ä–µ—á–µ!"),
            sep="\n"
        ), parse_mode="HTML", disable_web_page_preview=True,
    )
    await message.answer(
        fmt.text(
            fmt.text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å! –î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É –æ—Ç–∫—Ä—ã—Ç"),
            fmt.text("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ <a href='https://t.me/gdenaiti_metro'>c—Å—ã–ª–∫—É</a>, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ —á–∞—Ç"),
            sep="\n"
        ), parse_mode="HTML"
    )


# @dp.message(Command("help"))
# async def help(message: types.Message):
#     await message.answer("–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
@dp.message(Command("help"))
async def help(message: types.Message):
    await message.answer(
        "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –≤–µ—â—å –≤ –º–µ—Ç—Ä–æ, –ú–¶–ö, –ú–¶–î –∏–ª–∏ –≤ –Ω–∞–∑–µ–º–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ?\n\n"
        "–ú–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞–º –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º –¥–ª—è –≤–∞—Å —Å–ø–æ—Å–æ–±–æ–º:\n\n"
        "üîπ –ø–æ –Ω–æ–º–µ—Ä—É 3210 —Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
        "üîπ —á–µ—Ä–µ–∑ —á–∞—Ç-–±–æ—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞: https://t.me/transport_mos_bot\n"
        "üîπ —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ –ø–æ—Ç–µ—Ä–µ –≤–µ—â–µ–π –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ¬´–ú–µ—Ç—Ä–æ –ú–æ—Å–∫–≤—ã¬ª: https://www.mosmetro.ru/app/\n\n"
        "–ù–∞—à–∏ —Å–∫–ª–∞–¥—ã –µ—Å—Ç—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—è—Ö:\n\n"
        "1Ô∏è‚É£ ¬´–ß–µ—Ä–∫–∏–∑–æ–≤—Å–∫–∞—è¬ª ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞–≥–æ–Ω –∏–∑ —Ü–µ–Ω—Ç—Ä–∞, –≤—ã—Ö–æ–¥ 1\n"
        "7Ô∏è‚É£ ¬´–ö–æ—Ç–µ–ª—å–Ω–∏–∫–∏¬ª ‚Äî –≤–æ—Å—Ç–æ—á–Ω—ã–π –≤–µ—Å—Ç–∏–±—é–ª—å ‚Äî –ø–µ—Ä–≤—ã–π –≤–∞–≥–æ–Ω –∏–∑ —Ü–µ–Ω—Ç—Ä–∞\n"
        "1Ô∏è‚É£ ¬´–î–µ–ª–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä¬ª ‚Äî –≤—Ç–æ—Ä–æ–π —è—Ä—É—Å —Å—Ç–∞–Ω—Ü–∏–∏, –ø–æ–º–µ—â–µ–Ω–∏–µ 1077\n\n"
        "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –°–∫–ª–∞–¥–æ–≤ –∑–∞–±—ã—Ç—ã—Ö –≤–µ—â–µ–π: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 8:00 –¥–æ 20:00\n"
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://mosmetro.ru/passengers/services/lost-and-found/\n\n"
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∑—è—Ç–∞ —Å —Å–∞–π—Ç–∞: https://transport.mos.ru/mostrans/all_news/113951"
    )	

@dp.message(F.new_chat_members)
async def mes_new_user(message: types.Message):
    await message.delete()

@dp.message(F.left_chat_member)
async def mes_left_user(message: types.Message):
    await message.delete()
    
async def main() -> None:
    await async_main()
    # Initialize Bot instance with default bot properties which will be passed to all API calls
    dp.include_routers(user_router)
    # And the run events dispatching
    await dp.start_polling(bot, allowed_updates=["message", "chat_member"])


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("Exit")